<?php

namespace App\Http\Controllers\front;

use Razorpay\Api\Api;
use App\Models\Payment;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;

class PaymentController extends Controller
{
    public function showPaymentForm(Request $request)
    {
        // dd($request->all());
        $data['type'] = $request->type;
        return view('front.payment_form', $data);
    }

    public function addPayment(Request $request)
    {
        $api = new Api(env('RAZORPAY_KEY'), env('RAZORPAY_SECRET'));

        $order_id = strtoupper($request->type . '_' . uniqid());
        $amount = $request->amount ?? 500;

        $orderData = [
            'receipt' => $order_id,
            'amount' => $amount * 100,
            'currency' => 'INR',
            'payment_capture' => 1,
        ];

        $razorpayOrder = $api->order->create($orderData);

        $payment = Payment::create([
            'type' => $request->type,
            'name' => $request->name,
            'phone' => $request->phone,
            'email' => $request->email,
            'country' => $request->country,
            'receiver_name' => $request->receiver_name ?? null,
            'receiver_phone' => $request->receiver_phone ?? null,
            'receiver_email' => $request->receiver_email ?? null,
            'receiver_country' => $request->receiver_country ?? null,
            'amount' => $amount,
            'razorpay_order_id' => $razorpayOrder->id,
            'status' => 'pending'
        ]);

        return response()->json([
            'type' => 'success',
            'redirect_url' => route('front.show.razorpay', [
                'order_id' => $razorpayOrder->id,
                'payment_id' => $payment->id
            ]),
        ]);
    }

    public function showRazorpay(Request $request)
    {
        $payment = Payment::findOrFail($request->payment_id);

        return view('front.payment_page', [
            'razorpayOrderId' => $request->order_id,
            'amount' => $payment->amount,
            'key' => env('RAZORPAY_KEY'),
            'payment' => $payment,
        ]);
    }

    public function callback(Request $request)
    {
        $generated_signature = hash_hmac(
            'sha256',
            $request->razorpay_order_id . '|' . $request->razorpay_payment_id,
            env('RAZORPAY_SECRET')
        );

        $payment = Payment::where('razorpay_order_id', $request->razorpay_order_id)->first();

        if (!$payment) {
            return redirect()->route('payment.failed');
        }

        if ($generated_signature === $request->razorpay_signature) {
            $payment->update([
                'razorpay_payment_id' => $request->razorpay_payment_id,
                'status' => 'success',
            ]);

            return redirect()->route('payment.success');
        } else {
            $payment->update(['status' => 'failed']);
            return redirect()->route('payment.failed');
        }
    }

    public function success()
    {
        return view('front.payment_success');
    }

    public function failed()
    {
        return view('front.payment_failed');
    }
}
------------------- Route ---------------
Route::get('/payment', [PaymentController::class, 'showPaymentForm'])->name('front.payment.form');
Route::post('/payment-add', [PaymentController::class, 'addPayment'])->name('front.payment.add');
Route::get('/payment-page', [PaymentController::class, 'showRazorpay'])->name('front.show.razorpay');

Route::get('/payment/callback', [PaymentController::class, 'callback'])->name('payment.callback');
Route::get('/payment/success', [PaymentController::class, 'success'])->name('payment.success');
Route::get('/payment/failed', [PaymentController::class, 'failed'])->name('payment.failed');
-----------payment page -------
 <script>
        // Razorpay Checkout Options
        var options = {
            "key": "{{ $key }}",
            "amount": "{{ $amount * 100 }}",
            "currency": "INR",
            "name": "Your Site Name",
            "description": "Payment for Order #{{ $payment->id }}",
            "order_id": "{{ $razorpayOrderId }}",
            "handler": function(response) {
                window.location.href = "{{ route('payment.callback') }}" +
                    "?razorpay_payment_id=" + response.razorpay_payment_id +
                    "&razorpay_order_id=" + response.razorpay_order_id +
                    "&razorpay_signature=" + response.razorpay_signature;
            },
            "prefill": {
                "name": "{{ $payment->name }}",
                "email": "{{ $payment->email }}",
                "contact": "{{ $payment->phone }}"
            },
            "theme": {
                "color": "#528FF0"
            }
        };

        var rzp1 = new Razorpay(options);
        window.onload = function() {
            rzp1.open();
        }

        rzp1.on('payment.failed', function(response) {
            alert("Payment Failed: " + response.error.description);
            window.location.href = "{{ route('payment.failed') }}";
        });
    </script>
